{"version":3,"sources":["logo.svg","TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["TaskList","props","items","tasks","map","item","className","text","onClick","deleteTasks","key","App","state","presentTask","handleTask","bind","addTask","e","this","setState","target","value","Date","now","preventDefault","task","alltasks","remainingItems","filter","id","onSubmit","type","placeholder","onChange","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAAe,I,YCqBAA,MAhBf,SAAkBC,GACd,IACMC,EADQD,EAAME,MACDC,KAAI,SAAAC,GACnB,OAAO,sBAAKC,UAAU,OAAf,UACH,4BAAID,EAAKE,OACT,wBAAQD,UAAU,MAAME,QAAS,kBAAMP,EAAMQ,YAAYJ,EAAKK,MAA9D,sBAF8BL,EAAKK,QAM3C,OACI,8BACKR,KC2DES,E,kDAnEb,WAAYV,GAAO,IAAD,8BAChB,cAAMA,IACDW,MAAM,CACTT,MAAM,GACNU,YAAY,CACVN,KAAK,GACLG,IAAI,KAIR,EAAKI,WAAW,EAAKA,WAAWC,KAAhB,gBAChB,EAAKC,QAAQ,EAAKA,QAAQD,KAAb,gBACb,EAAKN,YAAY,EAAKA,YAAYM,KAAjB,gBAZD,E,uDAePE,GACTC,KAAKC,SAAS,CACZN,YAAY,CACVN,KAAKU,EAAEG,OAAOC,MACdX,IAAIY,KAAKC,W,8BAKPN,GACNA,EAAEO,iBACF,IAAMC,EAAKP,KAAKN,MAAMC,YACtB,GAAiB,KAAdY,EAAKlB,KAAY,CAClB,IAAMmB,EAAS,GAAD,mBAAKR,KAAKN,MAAMT,OAAhB,CAAsBsB,IACpCP,KAAKC,SAAS,CACZhB,MAAMuB,EACNb,YAAY,CACVN,KAAK,GACLG,IAAI,S,kCAQAA,GACV,IAAMiB,EAAiBT,KAAKN,MAAMT,MAAMyB,QAAO,SAAAvB,GAAI,OACjDA,EAAKK,MAAMA,KACXQ,KAAKC,SAAS,CACZhB,MAAMwB,M,+BAIV,OACE,sBAAKrB,UAAU,MAAf,UACA,iCACE,uBAAMuB,GAAG,cAAcC,SAAUZ,KAAKF,QAAtC,UACE,uBAAOe,KAAK,OAAOC,YAAY,iBAAiBX,MAAOH,KAAKN,MAAMC,YAAYN,KAAM0B,SAAUf,KAAKJ,aACnG,wBAAQiB,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAU5B,MAAOe,KAAKN,MAAMT,MAAOM,YAAaS,KAAKT,qB,GA1DzCyB,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.78755aa8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport './TaskList.css';\r\nimport FlipMove from 'react-flip-move';\r\n\r\n\r\nfunction TaskList(props) {\r\n    const tasks = props.tasks;\r\n    const items= tasks.map(item => {\r\n        return <div className=\"list\" key={item.key}>\r\n            <p>{item.text}</p>\r\n            <button className='btn' onClick={() => props.deleteTasks(item.key)}>\r\n                delete</button>\r\n        </div>\r\n    })\r\n    return (\r\n        <div>\r\n            {items}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default TaskList;","import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport TaskList from \"./TaskList\";\n\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      tasks:[],\n      presentTask:{\n        text:'',\n        key:''\n      }\n      \n    }\n    this.handleTask=this.handleTask.bind(this);\n    this.addTask=this.addTask.bind(this);\n    this.deleteTasks=this.deleteTasks.bind(this);\n    \n  }\n  handleTask(e){\n    this.setState({\n      presentTask:{\n        text:e.target.value,\n        key:Date.now()\n      }\n    })\n  }\n\n  addTask(e){\n    e.preventDefault();\n    const task=this.state.presentTask;\n    if(task.text !== \"\"){\n      const alltasks=[...this.state.tasks,task];\n      this.setState({\n        tasks:alltasks,\n        presentTask:{\n          text:'',\n          key:''\n        }\n      }\n\n      )\n    }\n  }\n\n  deleteTasks(key){\n    const remainingItems = this.state.tasks.filter(item => \n      item.key!==key);\n      this.setState({\n        tasks:remainingItems\n      })\n  }\n  render(){\n    return(\n      <div className=\"app\">\n      <header>\n        <form id=\"formelement\" onSubmit={this.addTask}>\n          <input type=\"text\" placeholder=\"enter the task\" value={this.state.presentTask.text} onChange={this.handleTask}></input>\n          <button type=\"submit\">Add</button>\n        </form>\n      </header>\n      <TaskList tasks={this.state.tasks} deleteTasks={this.deleteTasks}></TaskList>\n      </div>\n      \n\n    );\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}